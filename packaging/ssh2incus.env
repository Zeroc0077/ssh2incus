# Arguments to pass to ssh2incus daemon
ARGS=-m

#  -C, --allow-create            allow creating new instances
#      --auth-methods string     enable auth method chain, e.g.: "publickey,password"
#  -b, --banner                  show banner on login
#      --chroot-sftp             enable home dir chroot for SFTP sessions
#  -c, --client-cert string      client certificate for remote
#  -k, --client-key string       client key for remote
#  -d, --debug                   enable debug log
#      --dump                    dump parsed config
#      --dump-create             dump parsed create config
#  -g, --groups string           list of groups members of which allowed to connect (default "incus,incus-admin")
#  -H, --healthcheck string      enable Incus health check every X minutes, e.g. "5m"
#  -h, --help                    print help
#      --idle-timeout duration   idle session timeout duration, e.g. 180s or 5m (default 3m0s)
#      --inauth                  use --instance-auth
#  -I, --instance-auth           enable authentication using instance keys
#  -l, --listen string           listen on ":port" or "host:port" (default ":2222")
#  -m, --master                  start master process and spawn workers
#      --noauth                  disable SSH authentication completely
#  -P, --password-auth           enable password authentication
#      --pprof                   enable pprof
#      --pprof-listen string     pprof listen on ":port" or "host:port" (default ":6060")
#  -r, --remote string           default Incus remote to use
#  -t, --server-cert string      server certificate for remote
#  -S, --shell string            shell access command: login, su, sush or user shell (default)
#  -s, --socket string           Incus socket to connect to (optional, defaults to INCUS_SOCKET env)
#  -T, --term-mux string         terminal multiplexer: tmux (default) or screen (default "tmux")
#  -u, --url string              Incus remote url to connect to (should start with https://)
#  -v, --version                 print version
#  -w, --welcome                 show welcome message to users connecting to shell
